
class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None
def addNode(head: Node, p: int, x: int) -> Node:
    # Create new node
    new_node = Node(x)
    curr = head
    for _ in range(p):
        if curr is None:
            return head  # invalid position
        curr = curr.next
    new_node.next = curr.next
    new_node.prev = curr

    if curr.next:
        curr.next.prev = new_node
    curr.next = new_node

    return head
def printList(head: Node):
    res = []
    curr = head
    while curr:
        res.append(str(curr.data))
        curr = curr.next
    print(" <-> ".join(res))
if __name__ == "__main__":
    # Create example list: 1 <-> 2 <-> 3 <-> 4
    head = Node(1)
    second = Node(2)
    third = Node(3)
    fourth = Node(4)
    head.next = second
    second.prev = head
    second.next = third
    third.prev = second
    third.next = fourth
    fourth.prev = third
    print("Original list:")
    printList(head)
    head = addNode(head, 2, 6)
    print("\nAfter inserting 6 after position 2:")
    printList(head)

    # Insert 44 after position 0
    head = addNode(head, 0, 44)
    print("\nAfter inserting 44 after position 0:")
    printList(head)
