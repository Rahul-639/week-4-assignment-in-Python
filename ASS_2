
class Node:
    def __init__(self, data):
        self.data = data
        self.prev = None
        self.next = None

def deleteNode(head: Node, x: int) -> Node:
    if head is None:
        return None
    if x == 1:
        new_head = head.next
        if new_head:
            new_head.prev = None
        return new_head
    curr = head
    for _ in range(x - 1):
        if curr is None:
            return head  # position out of bounds
        curr = curr.next

    if curr is None:
        return head
        curr.prev.next = curr.next
    if curr.next:
        curr.next.prev = curr.prev

    return head
def printList(head: Node):
    res = []
    curr = head
    while curr:
        res.append(str(curr.data))
        curr = curr.next
    print(" <-> ".join(res))
if __name__ == "__main__":
    # Create example list: 1 <-> 2 <-> 3 <-> 4
    head = Node(1)
    second = Node(2)
    third = Node(3)
    fourth = Node(4)

    head.next = second
    second.prev = head
    second.next = third
    third.prev = second
    third.next = fourth
    fourth.prev = third

    print("Original list:")
    printList(head)
    head = deleteNode(head, 3)
    print("\nAfter deleting position 3:")
    printList(head)
    head = deleteNode(head, 1)
    print("\nAfter deleting position 1:")
    printList(head)
