
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


def getIntersectionNode(head1: Node, head2: Node) -> Node:
    if not head1 or not head2:
        return None

    p1, p2 = head1, head2

    while p1 != p2:
        p1 = p1.next if p1 else head2
        p2 = p2.next if p2 else head1

    return p1  # or p2 (they are equal)

def printResult(node: Node):
    if node:
        print("Intersection at node with value:", node.data)
    else:
        print("No intersection")

if __name__ == "__main__":

    common1 = Node(15)
    common1.next = Node(30)

    head1 = Node(10)
    head1.next = common1

    head2 = Node(3)
    head2.next = Node(6)
    head2.next.next = Node(9)
    head2.next.next.next = common1

    print("Example 1:")
    result = getIntersectionNode(head1, head2)
    printResult(result)   # Expected 15
    common2 = Node(1)
    common2.next = Node(8)
    common2.next.next = Node(5)

    head1 = Node(4)
    head1.next = common2

    head2 = Node(5)
    head2.next = Node(6)
    head2.next.next = common2

    print("\nExample 2:")
    result = getIntersectionNode(head1, head2)
    printResult(result)   # Expected 1
